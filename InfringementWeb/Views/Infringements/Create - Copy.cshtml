@model InfringementWeb.Models.InfringementModel

@{
    ViewBag.Title = "New Infringement";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm("Create", "Infringements", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
         
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Number, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Number, new { htmlAttributes = new { @class = "form-control", @readonly="readonly" } })
                @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger" })
                </div>
            <div class="col-md-6">
                <input type="button" id="btnInfringementNo" name="btnInfringementNo" value="Manual Infringement Number" />
                
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Rego, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Rego, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Rego, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CityId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CityId, ViewBag.Cities as IEnumerable<SelectListItem>, "--Please Select--",
               new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ParkingLocationId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ParkingLocationId, ViewBag.PLocations as IEnumerable<SelectListItem>, "--Please Select--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ParkingLocationId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MakeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.MakeId, ViewBag.Makes as IEnumerable<SelectListItem>, "--Please Select--",
               new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MakeId, "", new { @class = "text-danger" })
                </div>
            <div class="col-md-6">
                @Html.CheckBoxFor(m => m.IsOtherMake) @Html.LabelFor(m => m.IsOtherMake)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ModelId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ModelId, ViewBag.Models as IEnumerable<SelectListItem>, "--Please Select--",
               new { @class = "form-control" })
           
                @Html.ValidationMessageFor(model => model.ModelId, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.MakeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.MakeId, ViewBag.Makes as IEnumerable<SelectListItem>, "--Please Select--",
               new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MakeId, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <span id="lblOtherMake"> @Html.LabelFor(model => model.OtherMake, htmlAttributes: new { @class = "control-label col-md-2" })</span>
            <div class="col-md-10">
                @Html.EditorFor(model => model.OtherMake, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OtherMake, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <span id="lblOtherModel">
                @Html.LabelFor(model => model.OtherModel, htmlAttributes: new { @class = "control-label col-md-2" })
            </span>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OtherModel, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OtherModel, "", new { @class = "text-danger" })
                </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InfringementTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.InfringementTypeId,
               ViewBag.InfringementTypes as IEnumerable<SelectListItem>,
               "--Please Select--",
               new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.InfringementTypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <span id="lblOtherInfringementType"> @Html.LabelFor(model => model.OtherInfringementType, htmlAttributes: new { @class = "control-label col-md-2" })</span>
            <div class="col-md-10">
                @Html.EditorFor(model => model.OtherInfringementType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OtherInfringementType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IncidentTime, htmlAttributes: new { @class = "control-label col-md-2" })<span>(MM-DD-YYYY)</span>
            <div class="col-md-3">
                <div class='input-group date' id='datetimepicker1'>
                    <input type="text" class="form-control" name="IncidentTime" id="IncidentTime" />
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
                @Html.ValidationMessageFor(model => model.IncidentTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Latitude, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Longitude, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.User, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.User, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.User, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <input type="hidden" name="GalleryImageScroll" id="GalleryImageScroll" value="@TempData["GalleryImageScroll"].ToString()" />

        <div class="form-group">
            @Html.Label("Image", new { @class = "control-label col-md-2" })
           <table border="0" width="60%" >
               <tr>
                   <td>
                       @Html.Label("Image", new { @class = "control-label col-md-2" })
                       <div class="col-md-4">
                           <img src="@Url.Action("GetImage", "Infringements", new { id = TempData["GalleryImageScroll"].ToString() })" height="100" id="ImageHolder" />
                       </div>

                   </td>
                   <td>
                       <div class="form-group">
                           @Html.LabelFor(model => model.Latitude, htmlAttributes: new { @class = "control-label col-md-2" })
                           <div class="col-md-6">
                               @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control" } })
                               @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
                           </div>
                       </div>
                       <div class="form-group">
                           @Html.LabelFor(model => model.Longitude, htmlAttributes: new { @class = "control-label col-md-2" })
                           <div class="col-md-6">
                               @Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control" } })
                               @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
                           </div>
                       </div>

                   </td>
               </tr>
           </table>
        </div>

        <div class="form-group">
            @Html.Label(" ", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ActionLink(" ", "Left", new { id = TempData["GalleryImageScroll"].ToString() }, new { @class = "glyphicon glyphicon-arrow-left", @title = "Left", @id = "left" })
                @Html.ActionLink(" ", "Right", new { id = TempData["GalleryImageScroll"].ToString() }, new { @class = "glyphicon glyphicon-arrow-right", @title = "Right", @id = "right" })

                <input type="file" id="Image" name="upload" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="Submit" name="Submit" type="submit" value="Add Photo" class="btn btn-default" />
            </div>
        </div>
        
        @*====================================*@
        @*<div class="form-group">
            @Html.LabelFor(model => model.DueDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AfterDueDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AfterDueDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AfterDueDate, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Street1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Street1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Street1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Street2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Street2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Street2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Suburb, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Suburb, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Suburb, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CityName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CityName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CityName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PostCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PostCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PostCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CountryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CountryId, ViewBag.Countries as IEnumerable<SelectListItem>, "--Please Select--",
               new { @class = "form-control" }) @*@Html.CheckBoxFor(m => m.IsOtherMake)
            @Html.LabelFor(m => m.IsOtherMake)*@
            @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
        </div>
    </div>
        @*=======================================*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="Submit" name="Submit" type="submit" value="Save Infringement" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/dateTimePicker")
    @Scripts.Render("~/bundles/loadBuildings")
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/bundles/loadCarModels")
    @Scripts.Render("~/bundles/infringementAmount")

    <script type="text/javascript">
    $(document).ready(function () {
            $('#OtherMake').hide();
            $('#OtherModel').hide();
            $('#lblOtherMake').hide();
            $('#lblOtherModel').hide();

            $('#OtherInfringementType').hide();
            $('#lblOtherInfringementType').hide();

            

            $('#left').click(function () {
                //debugger
                var pos = $("#GalleryImageScroll").val();
                if (pos > 0)
                {
                    pos = pos - 1;
                    $("#GalleryImageScroll").val(pos);
                    $("#ImageHolder").attr("src", "/Infringements/GetImage/"+ pos);
                }

                return false;
            });
            $('#right').click(function () {
                //debugger;
                var pos = $("#GalleryImageScroll").val();
                //if (pos > 0) {
                    pos = pos + 1;
                    $("#GalleryImageScroll").val(pos);
                    $("#ImageHolder").attr("src", "/Infringements/GetImage/" + pos);
                //}

                return false;
            });

            $('#btnInfringementNo').click(function () {
                //debugger;
                //if ($("#Number").disabled == true)
                //    $("#Number").disabled = false;
                //else
                //    $("#Number").disabled = true;

                if($('#Number').prop('readonly'))
                {
                    $('#Number').removeAttr('readonly');
                }
                else{
                    $('#Number').attr('readonly', 'readonly')
                    $('#Number').val("");
                }
           

                return false;
            });
            
        });
    </script>
}

